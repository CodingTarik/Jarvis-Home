@using System.Data.Entity.Core.Metadata.Edm
@model SmartHomeProject.Models.DeviceFunctionsModel
@{
    ViewData["Title"] = "Home Page";
}

    <div class="text-center">
        <h1 class="display-4">Funktionen bearbeiten</h1>
        <h3 class="display-6">Gerät auswählen</h3>
        <select name="selectedDevice" class="form-control" id="deviceSelect" name="deviceName" onchange="SelectionUpdateDevice()">
            @foreach (var device in Model.DeviceModels)
            {
                <option name="deviceName" value="@device.deviceID">@device.Name</option>
            }
        </select>
        <hr/>
        @{
            if (Model != null)
            {
                if (Model.addedFunction && Model.addedSuccess)
                {
                    <div class="alert alert-dismissible alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Hinzufügen erfolgreich!</strong> Die Funktion <strong>@Model.functionNameAdded</strong> wurde erfolgreich hinzugefügt.
                    </div>
                }
                else if (Model.addedFunction && !Model.addedSuccess)
                {
                    <div class="alert alert-dismissible alert-danger">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Hinzufügen nicht erfolgreich!</strong> Die Funktion <strong>@Model.functionNameAdded</strong> konnte nicht hinzugefügt werden.
                    </div>
                }
            }
        }
        <form method="post" asp-controller="Device" asp-action="addDeviceFunction" style="margin-top: 1rem;" >
            <div>
                <input type="hidden" id="deviceAddID" name="deviceID" value=""/>
                <div id="Functionname" style="display: inline-block; float: left; width: 32%;">
                    <label style="font-weight: bold; font-family: 'Roboto Medium';" for="functionname">Funktionsname</label>
                    <input type="text" class="form-control" id="functionname" name="functionname" placeholder="Funktionsname eingeben"/>
                </div>
                <div id="Functionname" style="display: inline-block; width: 32%; font-family: 'Roboto Medium';">
                    <label style="font-weight: bold; font-family: 'Roboto Medium';" for="functionpin">GPIO-Pin</label>
                    <input type="text" class="form-control" id="functionpin" name="functionpin" placeholder="GPIO-Pin eingeben"/>
                </div>
                <div id="Functionname" style="display: inline-block; float: right; width: 32%;">
                    <label style="font-weight: bold; font-family: 'Roboto Medium';" for="Bestätigen">Speichern</label>
                    <input type="submit" class="btn btn-info" style="width: 100%" id="Bestätigen" value="Funktion Hinzufügen"/>
                </div>
            </div>
        </form>
        <hr />
        <form style="margin-top: 1rem;">
            <div>
                <div id="SelectFunction">
                    <label>Funktion Auswählen</label>
                     <select name="deviceFunctions" class="form-control" id="deviceFunctions" name="deviceFunctions" onchange="SelectionUpdateFunction()">
                     </select>
                </div>
                
            </div>
        </form>
        <!--
        Tabell wo die funktionen des ausgewählten gerätes aufgelistet werden
        -->
        <script type="text/javascript">
             
            var devices = new Array();
            @foreach (var device in Model.DeviceModels)
            {
                @:devices.push({
                @:deviceFunctions: [
                @if(device.DeviceFunctions != null)
                    foreach (var fun in device.DeviceFunctions) 
                    { 
                        @:{ GPIO: @(fun.GPIO_PIN), Name: @(fun.functionname), ID:@(fun.functionID)},
                    }@:],
                @:id: "@(device.deviceID)", name: "@(device.Name)", description: "@(device.description)", type: "@(device.Type)", location: "@(device.Location)", port: "@(device.port)", ip: "@(device.ip)"
                @:});

            }
            SelectionUpdateDevice();
            function SelectionUpdateDevice() {
                var deviceID= document.getElementById("deviceSelect").value;
                for (i = 0; i < devices.length; i++)
                {
                    if (devices[i].id == deviceID) {
                        var deviceFunctions = document.getElementById("deviceFunctions");
                        var hiddenID = document.getElementById("deviceAddID");
                        hiddenID.value = devices[i].id;
                        /*for(let dvcFunc of deviceFunctions)
                        var option = deviceFunctions.createElement("option");
                        option.text = 
                        
                        option.value = 
                        
                        return;*/

                    }
                }
            }
        </script>
        <script src="../js/DeviceStatus.js"></script>
    </div>
